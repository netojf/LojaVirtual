
@inject NavigationManager NavigationManager

<EditForm Model="@Product" OnValidSubmit="SubmitForm">
    <DataAnnotationsValidator />
    <ValidationSummary />
    @* Name *@
    <div class="form-group">
        <label>Nome</label>
        <InputText @bind-Value="Product.Name" />
    </div>
    @* Description *@
    <div class="form-group">
        <label>Descrição</label>
        <InputText @bind-Value="Product.Description" />
    </div>
    @* Brand *@
    <div class="form-group">
        <label>Marca</label>
        <InputText @bind-Value="Product.Brand" />
    </div>
    @* Price *@
    <div class="form-group">
        <label>Preço</label>
        <InputNumber  @bind-Value="Product.Price" />
    </div>
    @* Category *@
    <div class="form-group">
        <label>Categoria</label>
        <select @onchange="SelectCategory">
            <option value="">Selecione uma Categoria</option>
            @{
                foreach (var category in categories)
                {
                    <option value="@category.CategoryId">@category.Name</option>
                }
            }
        </select>
    </div>
    @* Images *@
    <div class="form-group">
        @{
            if (Product.Images == null)
            {
                Product.Images = new List<Models.Image>();
            }
        }
        <ImageUploadInput @bind-Vallue="Product.Images" />
    </div>
    @* Product Image *@
<div class="form-group">
    @if (Product.Images != null)
    {
        Product.ProductImage = 0;
    }
    <label>Imagem Principal</label>
    
    <select @onchange="SelectMainImage"  @onclick="selectClick" >

        <option value="">Escolha uma Imagem Principal</option>
        @if (Product.Images != null)
        {
            foreach (var image in Product.Images)
            {
                <option value="@aux">@image.ImageName</option>
                aux++;
            }
        }

    </select>
</div>

    <div class="row">
        <button type="submit" class="btn btn-danger btn-block">
            <span class="fas fa-send" style="font-size:large"></span>
        </button>
    </div>

</EditForm>


@code
{
    public Models.Product Product { get; set; } = new Models.Product();
    readonly List<Models.Category> categories;
    bool registering = true;
    int aux = 0;


    public ProductFormCreate()
    {
        using (Models.LojaVirtualContext ctxt = new Models.LojaVirtualContext())
        {
            categories = ctxt.Categories.ToList();
        }
    }

    void SelectMainImage(ChangeEventArgs e)
    {
        int val = int.Parse((string)e.Value);
        Product.ProductImage = val;

    }

    void selectClick(EventArgs e)
    {

    }



    void SelectCategory(ChangeEventArgs e)
    {
        Models.Category cat;
        using (Models.LojaVirtualContext ctxt = new Models.LojaVirtualContext())
        {
            int id = int.Parse((string)e.Value);
            cat = ctxt.Categories.Find(id);
        }
        Product.Category = cat;
        Product.Category.CategoryId = default;
    }

    void NewRegister()
    {
        registering = true;
        Product = new Models.Product();
    }


    void SubmitForm()
    {
        if (Product == null)
        {
            return;
        }
        foreach (var image in Product.Images)
        {
            image.Product = Product;
        }
        if (string.IsNullOrEmpty(Product.Category.Name))
        {
            Product.Category = categories[0];
        }
        if (Product.ProductImage == null)
        {
            Product.ProductImage = 0; 
        }

        using (Models.LojaVirtualContext ctxt = new Models.LojaVirtualContext())
        {
            ctxt.Products.Add(Product);
            foreach (var image in Product.Images)
            {
                ctxt.Images.Add(image);
            }

            ctxt.SaveChanges();
        }
        NavigationManager.NavigateTo("/Product/Index", true);
    }
}
